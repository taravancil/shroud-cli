#!/usr/bin/env node
// native

// external
import {red} from 'chalk'
import minimist from 'minimist'

// lib
import commands from '../lib/commands/index'
import help from '../lib/help'
import usage from '../lib/usage'

const argv = minimist(process.argv.slice(2))

// Map constructor turns arrays into key value pairs
const aliases = new Map([
  ['ls', 'list'],
  ['rm', 'remove']
])

// default command is help
let command = argv._[0] || 'help'

if (argv.help || argv.h || command === 'help') {
  usage()
  process.exit()
}

// if the command is an alias, redefine it
if (aliases.has(command)) {
  command = aliases.get(command)
}

if (!commands.has(command)) {
  console.log(red(`Error: ${command} is not a valid command`))
  usage()
  process.exit(1)
}

// get the command object
command = commands.get(command)
command.run(argv)
